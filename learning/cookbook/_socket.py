
"""
# -*- coding: utf-8 -*-
# @Author: liujinjia
# @Date:   2017-05-26 06:35:29
# @FileName:  _socket.py
# @Project: learning
# @Last Modified by:   Ray
# @Last Modified time: 2017-05-26 06:43:24
"""
"""
本节将介绍套接字(socket),给出有关其起源的一些背景知识,并讨论各种类型的套接字。
最后,将讲述如何利用它们使运行在不同(或相同)计算机上的进程相互通信

套接字是计算机网络数据结构,它体现了上节中所描述的“通信端点”的概念。在任何 类型的通信开始之前,网络应用程序必须创建套接字。可以将它们比作电话插孔,没有它将 无法进行通信。

套接字的起源可以追溯到 20 世纪 70 年代,它是加利福尼亚大学的伯克利版本 UNIX(称 为 BSD UNIX)
的一部分。因此,有时你可能会听过将套接字称为伯克利套接字或 BSD 套接 字。套接
字最初是为同一主机上的应用程序所创建,使得主机上运行的一个程序(又名一个 进程)与另一个运
行的程序进行通信。这就是所谓的进程间通信(Inter Process Communication, IPC)。有两种类型的
套接字:基于文件的和面向网络的。

UNIX 套接字是我们所讲的套接字的第一个家族,并且拥有一个“家族名字”AF_UNIX
(又名AF_LOCAL,在POSIX1.g标准中指定),它代表地址家族(address family):UNIX。 包括 Python
在内的大多数受欢迎的平台都使用术语地址家族及其缩写 AF;其他比较旧的系 统可能会将地址家族表示
成域(domain)或协议家族(protocol family),并使用其缩写 PF 而 非 AF。类似地,AF_LOCAL
(在 2000~2001 年标准化)将代替 AF_UNIX。然而,考虑到 后向兼容性,很多系统都同时使用二者,
只是对同一个常数使用不同的别名。Python 本身仍
然在使用 AF_UNIX。
"""
